import React, { useEffect, useRef, useState } from 'react';
import { Link } from 'react-router-dom';
import { 
  ArrowRight, Code, Smartphone, Brain, Rocket, Users, Star, 
  ChevronRight, ExternalLink, Zap, Shield, Globe, Database,
  Award, CheckCircle, Cpu, Layers, MessageSquare, BarChart
} from 'lucide-react';
import { Helmet } from 'react-helmet-async';
import { motion, useScroll, useTransform, AnimatePresence } from 'framer-motion';

const Home: React.FC = () => {
  const videoRef = useRef<HTMLVideoElement>(null);
  const [isLoaded, setIsLoaded] = useState(false);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const heroRef = useRef<HTMLDivElement>(null);
  const [activeTestimonial, setActiveTestimonial] = useState(0);
  
  // Parallax effect for hero section
  const { scrollYProgress } = useScroll({
    target: heroRef,
    offset: ["start start", "end start"]
  });
  
  const heroY = useTransform(scrollYProgress, [0, 1], ["0%", "30%"]);
  const heroOpacity = useTransform(scrollYProgress, [0, 0.8], [1, 0]);

  useEffect(() => {
    // Ensure video plays automatically
    if (videoRef.current) {
      videoRef.current.play().catch(error => {
        console.error("Video autoplay failed:", error);
      });
    }
    
    // Set loaded state after a short delay for animation purposes
    const timer = setTimeout(() => {
      setIsLoaded(true);
    }, 500);
    
    // Track mouse position for interactive effects
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({
        x: e.clientX,
        y: e.clientY
      });
    };
    
    window.addEventListener('mousemove', handleMouseMove);
    
    // Auto-rotate testimonials
    const testimonialTimer = setInterval(() => {
      setActiveTestimonial((prev) => (prev + 1) % testimonials.length);
    }, 8000);
    
    return () => {
      clearTimeout(timer);
      clearInterval(testimonialTimer);
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);

  // Animation variants
  const fadeInUp = {
    hidden: { opacity: 0, y: 30 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.6, ease: "easeOut" as const }
    }
  };
  
  const fadeInLeft = {
    hidden: { opacity: 0, x: -50 },
    visible: { 
      opacity: 1, 
      x: 0,
      transition: { duration: 0.7, ease: "easeOut" as const }
    }
  };
  
  const fadeInRight = {
    hidden: { opacity: 0, x: 50 },
    visible: { 
      opacity: 1, 
      x: 0,
      transition: { duration: 0.7, ease: "easeOut" as const }
    }
  };

  const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2
      }
    }
  };
  
  const floatingAnimation = {
    initial: { y: 0 },
    animate: { 
      y: [0, -10, 0],
      transition: {
        duration: 3,
        repeat: Infinity,
        ease: "easeInOut" as const
      }
    }
  };

  const stats = [
    { number: '500+', label: 'Проектов' },
    { number: '100+', label: 'Клиентов' },
    { number: '50+', label: 'Экспертов' }
  ];
  
  const features = [
    {
      icon: Rocket,
      title: "Быстрый старт",
      description: "От идеи до запуска в кратчайшие сроки с сохранением высокого качества",
      color: "neon-blue"
    },
    {
      icon: Brain,
      title: "AI-powered решения",
      description: "Интеграция искусственного интеллекта для автоматизации и оптимизации процессов",
      color: "neon-purple"
    },
    {
      icon: Users,
      title: "Экспертная команда",
      description: "Специалисты с опытом работы в ведущих технологических компаниях",
      color: "neon-pink"
    },
    {
      icon: Globe,
      title: "Глобальный охват",
      description: "Работаем с клиентами по всему миру, учитывая локальную специфику",
      color: "neon-green"
    },
    {
      icon: Shield,
      title: "Надежность",
      description: "Гарантируем безопасность, стабильность и долгосрочную поддержку решений",
      color: "neon-blue"
    },
    {
      icon: Database,
      title: "Масштабируемость",
      description: "Создаем решения, готовые к росту вместе с вашим бизнесом",
      color: "neon-purple"
    }
  ];
  
  const testimonials = [
    {
      name: "Алексей Смирнов",
      position: "CEO, TechVentures",
      text: "KolTech превзошли все наши ожидания. Их команда не только создала потрясающий продукт, но и предложила инновационные решения, о которых мы даже не задумывались.",
      image: "https://randomuser.me/api/portraits/men/32.jpg"
    },
    {
      name: "Елена Петрова",
      position: "Директор по инновациям, FutureGroup",
      text: "Работа с KolTech была невероятно продуктивной. Они глубоко погрузились в наш бизнес и создали технологическое решение, которое вывело нас на новый уровень.",
      image: "https://randomuser.me/api/portraits/women/44.jpg"
    },
    {
      name: "Дмитрий Козлов",
      position: "Основатель, StartupHub",
      text: "Я впечатлен скоростью и качеством работы KolTech. Они помогли нам запустить MVP в рекордные сроки, что позволило быстро привлечь первых инвесторов.",
      image: "https://randomuser.me/api/portraits/men/67.jpg"
    }
  ];
  
  const processSteps = [
    {
      number: "01",
      title: "Стратегическое планирование",
      description: "Анализируем ваши цели, аудиторию и конкурентов для создания оптимальной стратегии",
      icon: BarChart,
      color: "neon-blue"
    },
    {
      number: "02",
      title: "Техническая реализация",
      description: "Разрабатываем решение с использованием передовых технологий и лучших практик",
      icon: Cpu,
      color: "neon-purple"
    },
    {
      number: "03",
      title: "Тестирование и оптимизация",
      description: "Проводим тщательное тестирование и оптимизацию для обеспечения высокой производительности",
      icon: CheckCircle,
      color: "neon-pink"
    },
    {
      number: "04",
      title: "Запуск и масштабирование",
      description: "Запускаем проект и обеспечиваем его дальнейшее развитие и масштабирование",
      icon: Rocket,
      color: "neon-green"
    }
  ];

  return (
    <div className="min-h-screen bg-dark-900">
      <Helmet>
        <title>KolTech | От мысли к действию</title>
        <meta name="description" content="KolTech - инновационная платформа для разработки веб-сайтов, мобильных приложений и AI-решений. Мы превращаем ваши идеи в революционные цифровые продукты." />
        <meta name="keywords" content="Корпоративные сайты, E-commerce решения, Веб-приложения, Backend системы, Нативные приложения, Кроссплатформенные, PWA приложения, Enterprise решения, React Native, Flutter, Swift, Kotlin, Dart, Objective-C, Java, Xamarin, Ionic, Cordova, Firebase, SQLite, Realm, Core Data, Room, React, Vue.js, Angular, Node.js, TypeScript, JavaScript, Python, PHP, Next.js, Nuxt.js, Express.js, Django, Laravel, MySQL, Docker, AWS, GraphQL, Чат-боты, CV, Компьютерное зрение, Аналитика, Обработка текста, TensorFlow, PyTorch, OpenAI GPT, Hugging Face, Scikit-learn, Keras, OpenCV, NLTK, spaCy, Pandas, NumPy, Matplotlib, Jupyter, MLflow, Docker, Kubernetes, AWS SageMaker, Google AI, Azure ML, Apache Spark, Elasticsearch, MongoDB, PostgreSQL, Redis, Стратегическое планирование, Техническое консультирование, Безопасность и соответствие, Цифровая трансформация, Бизнес-Акселератор, Быстрый старт, AI-powered решения, Экспертная команда, Глобальный охват, Точное попадание, Надежность, Стратегическое планирование, Техническая реализация, Масштабирование, KolTechLine, FLineHub, KolTechValley, KolTechBusiness, Будущее Цифрового Сотрудничества" />
        <meta property="og:title" content="KolTech | От мысли к действию" />
        <meta property="og:description" content="KolTech - инновационная платформа для разработки веб-сайтов, мобильных приложений и AI-решений. Мы превращаем ваши идеи в революционные цифровые продукты." />
        <meta property="og:type" content="website" />
        <link rel="canonical" href="https://koltech.dev" />
      </Helmet>

      {/* Hero Section */}
      <section ref={heroRef} className="hero-with-video relative h-screen">
        {/* Animated particles */}
        <div className="absolute inset-0 z-0 overflow-hidden">
          {[...Array(30)].map((_, i) => (
            <motion.div
              key={i}
              className="absolute w-1 h-1 rounded-full bg-neon-blue"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
              }}
              animate={{
                opacity: [0.1, 0.5, 0.1],
                scale: [1, 1.5, 1],
              }}
              transition={{
                duration: 3 + Math.random() * 5,
                repeat: Infinity,
                delay: Math.random() * 5,
              }}
            />
          ))}
        </div>
        
        <motion.video
          ref={videoRef}
          className="video-background"
          autoPlay
          loop
          muted
          playsInline
          preload="auto"
          disablePictureInPicture
          style={{ y: heroY, opacity: heroOpacity }}
        >
          <source src="/video1.mp4" type="video/mp4" />
          Your browser does not support the video tag.
        </motion.video>
        
        {/* Overlay with cyber grid */}
        <div className="absolute inset-0 bg-dark-900/70 cyber-grid z-0"></div>
        
        {/* Scan line effect */}
        <div className="absolute inset-0 scan-line pointer-events-none z-1"></div>
        
        {/* Diagonal neon lines */}
        <div className="absolute inset-0 overflow-hidden z-0">
          <motion.div 
            className="absolute h-px bg-gradient-to-r from-transparent via-neon-blue to-transparent w-[200%]"
            style={{ top: '30%', left: '-50%', transform: 'rotate(45deg)' }}
            animate={{
              opacity: [0.1, 0.3, 0.1],
              left: ['-50%', '0%', '-50%']
            }}
            transition={{
              duration: 15,
              repeat: Infinity,
              ease: "linear"
            }}
          ></motion.div>
          <motion.div 
            className="absolute h-px bg-gradient-to-r from-transparent via-neon-purple to-transparent w-[200%]"
            style={{ top: '70%', left: '-50%', transform: 'rotate(-45deg)' }}
            animate={{
              opacity: [0.1, 0.3, 0.1],
              left: ['0%', '-50%', '0%']
            }}
            transition={{
              duration: 20,
              repeat: Infinity,
              ease: "linear"
            }}
          ></motion.div>
        </div>
        
        <div className="container mx-auto px-4 sm:px-6 z-10 h-full flex flex-col justify-center relative">
          <AnimatePresence>
            {isLoaded && (
              <motion.div 
                className="max-w-4xl mx-auto text-center"
                initial="hidden"
                animate="visible"
                variants={staggerContainer}
              >
                <motion.div className="relative inline-block mb-4 sm:mb-6">
                  {/* Animated rings around the title */}
                  <motion.div 
                    className="absolute -inset-6 sm:-inset-10 rounded-full border border-neon-blue/20 z-0"
                    animate={{ 
                      rotate: [0, 360],
                      scale: [1, 1.05, 1]
                    }}
                    transition={{ 
                      rotate: { duration: 20, repeat: Infinity, ease: "linear" },
                      scale: { duration: 3, repeat: Infinity, ease: "easeInOut" }
                    }}
                  ></motion.div>
                  <motion.div 
                    className="absolute -inset-12 sm:-inset-16 rounded-full border border-neon-purple/20 z-0"
                    animate={{ 
                      rotate: [360, 0],
                      scale: [1, 1.03, 1]
                    }}
                    transition={{ 
                      rotate: { duration: 25, repeat: Infinity, ease: "linear" },
                      scale: { duration: 4, repeat: Infinity, ease: "easeInOut" }
                    }}
                  ></motion.div>
                  
                  <motion.h1 
                    className="text-4xl sm:text-5xl md:text-7xl font-bold text-white leading-tight relative z-10"
                    variants={fadeInUp}
                  >
                    Создаем
                    <motion.span 
                      className="gradient-text block mt-1 sm:mt-2"
                      animate={{ 
                        textShadow: [
                          "0 0 10px rgba(0,242,255,0.3)", 
                          "0 0 20px rgba(0,242,255,0.5)", 
                          "0 0 10px rgba(0,242,255,0.3)"
                        ]
                      }}
                      transition={{ 
                        duration: 3, 
                        ease: "easeInOut", 
                        repeat: Infinity 
                      }}
                    >
                      Будущее Технологий
                    </motion.span>
                  </motion.h1>
                </motion.div>
            
                <motion.p 
                  className="text-base sm:text-xl text-gray-300 mb-8 sm:mb-10 max-w-2xl mx-auto leading-relaxed"
                  variants={fadeInUp}
                >
                  KolTech — инновационная платформа для разработки веб-сайтов, мобильных приложений
                  и AI-решений. <span className="text-neon-blue">Мы превращаем ваши идеи в революционные цифровые продукты.</span>
                </motion.p>
            
                <motion.div 
                  className="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center"
                  variants={fadeInUp}
                >
                  <motion.div
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    <Link
                      to="/contacts"
                      className="cyber-button inline-flex items-center justify-center text-sm sm:text-base relative overflow-hidden group"
                    >
                      <motion.span
                        className="absolute inset-0 bg-gradient-to-r from-neon-blue/20 to-neon-purple/20"
                        animate={{
                          x: ['-100%', '100%'],
                        }}
                        transition={{
                          duration: 1.5,
                          repeat: Infinity,
                          repeatType: 'loop',
                          ease: 'linear',
                        }}
                      ></motion.span>
                      <span className="relative z-10">Связаться с нами</span>
                      <ChevronRight className="ml-2 w-4 h-4 sm:w-5 sm:h-5 relative z-10" />
                    </Link>
                  </motion.div>
                  
                  <motion.div
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    <Link
                      to="/portfolio"
                      className="ghost-button inline-flex items-center justify-center text-sm sm:text-base group"
                    >
                      <span>Посмотреть работы</span>
                      <motion.div
                        animate={{ x: [0, 5, 0] }}
                        transition={{ 
                          duration: 1.5, 
                          repeat: Infinity,
                          repeatType: 'loop',
                          ease: 'easeInOut',
                        }}
                      >
                        <ArrowRight className="ml-2 w-4 h-4 sm:w-5 sm:h-5 group-hover:text-neon-blue transition-colors" />
                      </motion.div>
                    </Link>
                  </motion.div>
                </motion.div>
              </motion.div>
            )}
          </AnimatePresence>
          
          {/* Scroll indicator */}
          <motion.div 
            className="absolute bottom-10 left-1/2 transform -translate-x-1/2"
            animate={{ y: [0, 10, 0] }}
            transition={{ 
              duration: 2, 
              repeat: Infinity,
              repeatType: 'loop',
              ease: 'easeInOut',
            }}
          >
            <motion.div 
              className="w-6 h-10 rounded-full border-2 border-gray-400 flex justify-center"
              whileHover={{ scale: 1.1 }}
            >
              <motion.div 
                className="w-1.5 h-3 bg-neon-blue rounded-full mt-2"
                animate={{ 
                  y: [0, 15, 0],
                  opacity: [0.5, 1, 0.5]
                }}
                transition={{ 
                  duration: 2, 
                  repeat: Infinity,
                  repeatType: 'loop',
                  ease: 'easeInOut',
                }}
              ></motion.div>
            </motion.div>
          </motion.div>
        </div>
      </section>

      {/* Tech Stack Banner */}
      <section className="py-8 bg-dark-800 relative overflow-hidden">
        <div className="absolute inset-0 cyber-grid opacity-10"></div>
        <div className="container mx-auto">
          <motion.div 
            className="flex flex-wrap justify-center gap-8 sm:gap-12 md:gap-16"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
          >
            {['React', 'TypeScript', 'Node.js', 'Python', 'AWS', 'Docker', 'TensorFlow'].map((tech, index) => (
              <motion.div
                key={tech}
                className="text-gray-400 text-sm sm:text-base font-mono"
                whileHover={{ scale: 1.1, color: '#00f2ff' }}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ 
                  duration: 0.3, 
                  delay: index * 0.1,
                  color: { duration: 0.2 }
                }}
              >
                {tech}
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Services Section */}
      <section className="py-16 sm:py-24 px-4 sm:px-6 cyber-dots relative overflow-hidden">
        {/* Animated background elements */}
        <div className="absolute inset-0 z-0">
          <motion.div 
            className="absolute top-20 right-20 w-40 h-40 rounded-full bg-neon-blue/5 blur-3xl"
            animate={{ 
              scale: [1, 1.2, 1],
              opacity: [0.3, 0.6, 0.3]
            }}
            transition={{ 
              duration: 8, 
              repeat: Infinity,
              repeatType: 'reverse',
              ease: 'easeInOut',
            }}
          ></motion.div>
          <motion.div 
            className="absolute bottom-40 left-20 w-60 h-60 rounded-full bg-neon-purple/5 blur-3xl"
            animate={{ 
              scale: [1, 1.3, 1],
              opacity: [0.2, 0.5, 0.2]
            }}
            transition={{ 
              duration: 10, 
              repeat: Infinity,
              repeatType: 'reverse',
              ease: 'easeInOut',
            }}
          ></motion.div>
        </div>
        <div className="container mx-auto">
          <motion.div 
            className="text-center mb-12 sm:mb-20"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true, margin: "-100px" }}
            transition={{ duration: 0.6 }}
          >
            <motion.div 
              className="inline-block relative mb-4"
              initial="initial"
              whileInView="animate"
              viewport={{ once: true }}
              variants={floatingAnimation}
            >
              <motion.div 
                className="absolute -inset-3 rounded-full border border-neon-blue/30"
                animate={{ rotate: [0, 360] }}
                transition={{ duration: 20, repeat: Infinity, ease: "linear" }}
              ></motion.div>
              <Zap className="w-10 h-10 text-neon-blue" />
            </motion.div>
            
            <h2 className="text-3xl sm:text-4xl md:text-5xl font-bold mb-4 sm:mb-6">
              <motion.span 
                className="gradient-text inline-block"
                animate={{ 
                  textShadow: [
                    "0 0 10px rgba(0,242,255,0.3)", 
                    "0 0 20px rgba(0,242,255,0.5)", 
                    "0 0 10px rgba(0,242,255,0.3)"
                  ]
                }}
                transition={{ 
                  duration: 3, 
                  ease: "easeInOut", 
                  repeat: Infinity 
                }}
              >
                Наши Услуги
              </motion.span>
            </h2>
            <p className="text-gray-300 max-w-2xl mx-auto text-base sm:text-lg">
              Полный спектр IT-услуг для реализации ваших амбициозных проектов
            </p>
            
            {/* Decorative line */}
            <motion.div 
              className="h-px w-24 bg-gradient-to-r from-transparent via-neon-blue to-transparent mx-auto mt-6"
              animate={{ 
                width: ["0%", "100%", "0%"],
                opacity: [0, 1, 0]
              }}
              transition={{ 
                duration: 3, 
                ease: "easeInOut", 
                repeat: Infinity,
                repeatDelay: 1
              }}
            ></motion.div>
          </motion.div>

          <motion.div 
            className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 sm:gap-10"
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, margin: "-100px" }}
            variants={staggerContainer}
          >
            {[
              {
                icon: Code,
                title: 'Веб-разработка',
                description: 'Современные веб-сайты и веб-приложения с использованием передовых технологий',
                color: 'neon-blue',
                link: '/web-development'
              },
              {
                icon: Smartphone,
                title: 'Мобильные приложения',
                description: 'Нативные и кроссплатформенные мобильные приложения для iOS и Android',
                color: 'neon-purple',
                link: '/mobile-development'
              },
              {
                icon: Brain,
                title: 'AI-решения',
                description: 'Интеллектуальные системы и машинное обучение для автоматизации бизнеса',
                color: 'neon-pink',
                link: '/ai-solutions'
              }
            ].map((service, index) => (
              <motion.div
                key={index}
                variants={fadeInUp}
                className="h-full"
              >
                <Link
                  to={service.link}
                  className="cyber-card h-full p-6 sm:p-8 block group relative"
                >
                  {/* Animated border on hover */}
                  <motion.div 
                    className="absolute inset-0 opacity-0 group-hover:opacity-100"
                    transition={{ duration: 0.3 }}
                  >
                    <div className="absolute top-0 left-0 w-5 h-5 border-t-2 border-l-2 border-neon-blue"></div>
                    <div className="absolute top-0 right-0 w-5 h-5 border-t-2 border-r-2 border-neon-blue"></div>
                    <div className="absolute bottom-0 left-0 w-5 h-5 border-b-2 border-l-2 border-neon-blue"></div>
                    <div className="absolute bottom-0 right-0 w-5 h-5 border-b-2 border-r-2 border-neon-blue"></div>
                  </motion.div>
                  
                  <div className={`w-14 h-14 sm:w-16 sm:h-16 rounded-xl flex items-center justify-center mb-6 sm:mb-8 relative`}>
                    <motion.div 
                      className={`absolute inset-0 bg-${service.color} opacity-20 rounded-xl blur-md`}
                      animate={{ 
                        scale: [1, 1.2, 1],
                        opacity: [0.2, 0.3, 0.2]
                      }}
                      transition={{ 
                        duration: 3, 
                        repeat: Infinity,
                        repeatType: 'reverse',
                        ease: 'easeInOut',
                      }}
                    ></motion.div>
                    <motion.div
                      whileHover={{ rotate: 360 }}
                      transition={{ duration: 0.5 }}
                    >
                      <service.icon className={`w-7 h-7 sm:w-8 sm:h-8 text-${service.color} relative z-10`} />
                    </motion.div>
                  </div>
                  
                  <h3 className="text-xl sm:text-2xl font-bold text-white mb-4 group-hover:text-neon-blue transition-colors relative">
                    {service.title}
                    <motion.div 
                      className="absolute -bottom-1 left-0 w-0 h-px bg-neon-blue group-hover:w-full"
                      transition={{ duration: 0.3 }}
                    ></motion.div>
                  </h3>
                  
                  <p className="text-gray-300 leading-relaxed mb-6">
                    {service.description}
                  </p>
                  
                  <div className="flex items-center text-neon-blue font-medium">
                    <span>Подробнее</span>
                    <motion.div
                      animate={{ x: [0, 5, 0] }}
                      transition={{ 
                        duration: 1.5, 
                        repeat: Infinity,
                        repeatType: 'loop',
                        ease: 'easeInOut',
